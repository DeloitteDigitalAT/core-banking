# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: credit-application-service CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and run sonar analysis of the PR
      working-directory: ./domain-service/credit-application
      run: mvn clean verify sonar:sonar
        -Dsonar.host.url=${{ secrets.SONAR_URL }}
        -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        -Dsonar.projectKey=credit-application-service
        -Dsonar.pullrequest.key=${{ github.event.number }}
        -Dsonar.pullrequest.branch=${{ github.HEAD_REF }}
        -Dsonar.pullrequest.base=${{ github.BASE_REF }}
        -Dsonar.pullrequest.github.repository=${{ github.repository }}
        -Dsonar.scm.provider=git
        -Dsonar.java.binaries=/tmp

    - if: endsWith(github.REF, '/master') == true
      name: Run an analysis of the master branch
      working-directory: ./domain-service/credit-application
      run: mvn sonar:sonar
        -Dsonar.host.url=${{ secrets.SONAR_URL }}
        -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        -Dsonar.projectKey=credit-application-service
        -Dsonar.scm.provider=git
        -Dsonar.java.binaries=/tmp

  pushToEcr:

    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:

    - uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11

    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build docker image
      working-directory: ./domain-service/credit-application
      run: |
        echo "Run docker-build from $(pwd)"
        ./docker-build.sh

    - name: Tag and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: core-banking-credit-application-service
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker tag core-banking/credit-application-service:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
